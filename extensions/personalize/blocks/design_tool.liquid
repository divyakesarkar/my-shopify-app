{%- style -%}
  #customButtonDesign, #customButtonTemplate {
    padding: {{ block.settings.btn_padding }}px;
    color:{{block.settings.color}}; 
    background-color:{{ block.settings.bgcolor }};
    font-size: {{ block.settings.font_size }}px;
  }

  #fullPagePopup {
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    display: none;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

.popup-content {
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
}

{%- endstyle -%}


{% assign product_id = product.id %}

{% if product.metafields.design.design == true %}
  <button id="customButtonDesign" data-product-id="{{ product_id }}">{{ block.settings.designbtnlabel }}</button>
{% endif %}

{% if product.metafields.template.template == true %}
  <button id="customButtonTemplate" data-product-id="{{ product_id }}">{{ block.settings.templatebtnlabel }}</button>
{% endif %}


<div id="fullPagePopup">
    <div class="popup-content">
        <p>Your popup content here</p>
        <button onclick="closePopup()">Close</button>
    </div>
</div>

<script>
    document.getElementById("customButtonDesign").onclick = function() {
        document.getElementById("fullPagePopup").style.display = "block";
    }

    function closePopup() {
        document.getElementById("fullPagePopup").style.display = "none";
    }

var productId = {{ product.id }};
    async function loadProductData(productId) {
  try {
    const response = await fetch(`/api/product/${productId}`);
    const productData = await response.json();
    renderProduct(productData);
  } catch (error) {
    console.error('Error fetching product data:', error);
  }
}

// Call this function with the appropriate product ID when the editor loads
loadProductData(productId);
</script>


console.log()



{% schema %}
{
  "name": "Button",
  "target": "section",
  "settings": [
            {
            "type": "text", 
            "id":"designbtnlabel",
            "label": "Button Label", 
            "default": "Design"
            },
        {
            "type": "text",
            "id":"templatebtnlabel",
            "label": "Button Label",
            "default": "Template"
               },
         { 
            "type": "color", 
            "id": "bgcolor", 
            "label": "Button Background Color",
            "default": "#000000" 
             },
         { 
            "type": "color",
            "id": "color",
            "label": "Button Text Color",
            "default": "#ffffff" 
             },
             {
            "type": "range",
            "id": "font_size",
            "min": 0,
            "max": 40,
            "step": 4,
            "unit": "px",
            "label": "Font Size",
            "default": 20
        },
         {
            "type": "range",
            "id": "btn_padding",
            "min": 0,
            "max": 40,
            "step": 4,
            "unit": "px",
            "label": "Button Padding",
            "default": 20
        }
  ]
}
{% endschema %}
